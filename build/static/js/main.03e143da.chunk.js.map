{"version":3,"sources":["logo.svg","components/login.js","components/tempCard.js","components/tempDrawer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","console","log","state","user","password","rol","handleUserChange","bind","handlePasswordChange","handleRolChange","handleSubmit","e","this","setState","target","value","preventDefault","localStorage","setItem","login","classes","className","onSubmit","TextField","id","label","type","placeholder","onChange","fullWidth","autoFocus","required","Button","color","variant","React","Component","withStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","link","icon","marginRight","width","height","TempCard","date","Date","getDate","getMonth","getFullYear","Card","root","CardContent","estado","Typography","titleProgress","gutterBottom","titulo","titleReady","titleCompleted","component","them","minWidth","margin","bullet","transform","fontSize","pos","marginBottom","withTheme","TempDrawer","activo","handleActivoChange","logOut","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","IconButton","aria-label","onClick","edge","menuButton","hide","Drawer","drawer","anchor","open","drawerPaper","drawerHeader","direction","Divider","Grid","rootCard","CardHeader","cardHeader","avatar","Avatar","title","subheader","getItem","signOff","content","contentShift","alignContent","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","backgroundColor","flexShrink","padding","mixins","toolbar","justifyContent","flexGrow","bottom","right","App","isLoggedIn","handleLogginChange","clear","src","logo","alt","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.03e143da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './login.css';\r\nimport {  withStyles,TextField, MenuItem, Paper, Button, Typography} from '@material-ui/core';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      link: {\r\n        display: 'flex',\r\n      },\r\n      icon: {\r\n        marginRight: theme.spacing(0.5),\r\n        width: 25,\r\n        height: 25,\r\n      },\r\n});\r\n\r\nexport class Login extends React.Component {\r\n\r\n    constructor(props){\r\n        console.log(\"llegamos a login\");\r\n        super(props);\r\n        this.state = {user:'',password:'',rol:''};\r\n        this.handleUserChange = this.handleUserChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleRolChange = this.handleRolChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleUserChange(e){\r\n        this.setState({\r\n            user: e.target.value\r\n        });\r\n    };\r\n\r\n    handlePasswordChange(e){\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    };\r\n\r\n    handleRolChange(e){\r\n        this.setState({\r\n            rol: e.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        console.log(\"vamos a logearnos\");\r\n        if(this.state.user === \"andres@hotmail.com\" && this.state.password === \"3015\"){\r\n            localStorage.setItem('isLoggedIn',true);\r\n            this.props.login();\r\n        }else{\r\n            localStorage.setItem('isLoggedIn',false);\r\n        }\r\n    };\r\n\r\n    render() { \r\n        const { classes } = this.props;\r\n                \r\n        return (\r\n            <div className=\"fondo\">\r\n                 <div>\r\n                    <form onSubmit={this.handleSubmit} className=\"form\" >\r\n                        <br></br>\r\n                        <h2>Iniciar Sesión</h2>\r\n                        <br></br>\r\n                        <div className=\"text\">\r\n                            <div>\r\n                                <TextField  id=\"username\" label=\"Username\" type=\"email\" placeholder=\"andres@hotmail.com\"\r\n                                    onChange={this.handleUserChange} fullWidth autoFocus required />\r\n                            </div>\r\n                            <br></br>\r\n                            <div >\r\n                                <TextField id=\"username\" label=\"Password\" type=\"password\" placeholder=\"3015\"\r\n                                    onChange={this.handlePasswordChange} fullWidth required />\r\n                            </div >\r\n                        </div>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <div>\r\n                            <Button type=\"submit\" color=\"primary\" variant=\"contained\"  className=\"submit\"\r\n                                onChange={this.handleSubmit}>\r\n                                Entrar    \r\n                            </Button>\r\n                        </div>\r\n                        <br></br>\r\n                        <br></br>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Login);","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = them => ({\r\n  root: {\r\n    minWidth: 275,\r\n    margin: '20px 50px 20px 50px',\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  titleProgress: {\r\n    fontSize: 40,\r\n    color: \"#DA4B15\",\r\n  },\r\n  titleReady: {\r\n    fontSize: 40,\r\n    color: \"#0071EA\",\r\n  },\r\n  titleCompleted: {\r\n    fontSize: 40,\r\n    color: \"#3CCA0A\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  }\r\n});\r\n\r\n\r\nclass TempCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){    \r\n        const { classes } = this.props;\r\n        const date = new Date().getDate()+\"/\"+ new Date().getMonth() +\"/\"+ new Date().getFullYear();\r\n\r\n        return (\r\n            <Card className={classes.root}>\r\n              <CardContent>\r\n                {this.props.estado===\"In progress\" && <Typography className={classes.titleProgress} color=\"textPrimary\" gutterBottom>{this.props.titulo}</Typography>}\r\n                {this.props.estado===\"Ready\" && <Typography className={classes.titleReady} color=\"textPrimary\" gutterBottom>{this.props.titulo}</Typography>}\r\n                {this.props.estado===\"Completed\" && <Typography className={classes.titleCompleted} color=\"textPrimary\" gutterBottom>{this.props.titulo}</Typography>}\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <Typography variant=\"h5\" component=\"h5\">\r\n                    {this.props.estado}\r\n                </Typography>\r\n                <br></br>\r\n                <Typography variant=\"h5\" component=\"h3\">\r\n                    {date}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\" color=\"textSecondary\">\r\n                    Santiago Carrillo\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles, { withTheme: true })(TempCard);","import React, {Component} from 'react';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TempCard from './tempCard';\r\n\r\n\r\n\r\nclass TempDrawer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {activo: false}\r\n        \r\n        this.handleActivoChange = this.handleActivoChange.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n\r\n    }\r\n\r\n    handleActivoChange() {\r\n      this.setState({ activo: !this.state.activo });\r\n    };\r\n\r\n    logOut(){\r\n        console.log(\"logOut en draw\");\r\n        this.props.logOut();\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n              position=\"fixed\"\r\n              className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: this.state.activo,\r\n              })}\r\n            >\r\n              <Toolbar position=\"fixed\">\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={this.handleActivoChange}\r\n                  edge=\"start\"\r\n                  className={clsx(classes.menuButton, this.state.activo && classes.hide)}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n              className={classes.drawer}\r\n              variant=\"persistent\"\r\n              anchor=\"left\"\r\n              open={this.state.activo}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n                \r\n              <div className={classes.drawerHeader}>\r\n                <IconButton onClick={this.handleActivoChange}>\r\n                  {classes.direction === 'ltr' ?  <ChevronRightIcon/> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n              </div>\r\n\r\n              <Divider />\r\n              <Grid>\r\n              <Card className={classes.rootCard}>\r\n                <CardHeader\r\n                    className={classes.cardHeader}\r\n                    avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        A\r\n                    </Avatar>\r\n                    }\r\n                    title=\"Andres Rocha\"\r\n                    subheader=\"andres@gmail.com\"\r\n                />\r\n              </Card>\r\n              </Grid>\r\n             \r\n            \r\n                {localStorage.getItem(\"isLoggedIn\") === \"true\" &&\r\n                <Grid>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.signOff}\r\n                    onClick={this.logOut}\r\n                >\r\n                    Logout\r\n                </Button></Grid>}\r\n\r\n            </Drawer>\r\n            <main\r\n              className={clsx(classes.content, {\r\n                [classes.contentShift]: this.state.activo,\r\n              })}\r\n            >\r\n              <div className={classes.drawerHeader} />\r\n              <div>\r\n                <TempCard titulo={'Implement Login View'} estado={'In progress'}/>\r\n                <TempCard titulo={'Implement Login Controller'} estado={'Ready'}/>\r\n                <TempCard titulo={'Facebook Integration'} estado={'Completed'}/>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    rootCard: {\r\n        width: \"auto\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n        marginBottom: \"100%\"\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    avatar: {\r\n        backgroundColor: \"#EA0000\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    cardHeader : {\r\n        margin: \"auto\"\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    signOff: {\r\n       \r\n        position:\"static\",\r\n        bottom:\"10%\",\r\n        right:\"75px\",\r\n        marginTop: \"20%\"\r\n\r\n    }\r\n});\r\n\r\n\r\nexport default withStyles(styles, { withTheme: true })(TempDrawer);","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Login} from './components/login';\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom'\nimport TempDrawer from './components/tempDrawer';\n\nclass App extends Component {\n\n    constructor(props) {\n        console.log(\"estamos en app\");\n        super(props);\n        \n        this.state = {isLoggedIn: false};\n        this.handleLogginChange = this.handleLogginChange.bind(this);\n        this.logOut = this.logOut.bind(this);\n    }\n\n    handleLogginChange() {\n        this.setState({\n            isLoggedIn: !this.state.isLoggedIn\n        });\n    };\n\n    logOut(){\n        localStorage.clear();\n        localStorage.setItem('isLoggedIn',false);\n        this.handleLogginChange();\n    };\n\n    render() {\n        const LoginView = () => (<Login login={this.handleLogginChange}/>);\n\n        const DrawerView = () => (<TempDrawer logOut={this.logOut}/>);\n\n        return (\n            <Router>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                        <h3 className=\"App-title\">Lab 3 IETI</h3>\n                    </header>\n                    <div>\n                        {this.state.isLoggedIn ? <Redirect to=\"/panel\" />: <Redirect to=\"/\"/>}\n                        <Route exact path=\"/\" component={LoginView}/>\n                        <Route exact path=\"/panel\" component={DrawerView}/>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}